{
  
  "1": {
    "title": "Getting familiar with the API using Python",
    "content": "Getting familiar with the API using Python . In this section I explore the Trundler API using Python. . I convert the response of the requests into a Pandas DataFrame, then I get the names of the columns and shape in order to know the type of data I am dealing with. . Download Jupyter Notebook for this section . . Requests and responses . I write the following script to get the desired information: . import requests import json import pandas as pd headers = { &#39;accept&#39;: &#39;application/json&#39;, &#39;X-Api-Key&#39;: {my_API_key}, } retailer_id = {retailer_id} product_id = {product_id} endpoints = [&#39;/retailer&#39;, &#39;/retailer/&#39;+ str(retailer_id), &#39;/retailer/&#39;+ str(retailer_id) +&#39;/product&#39;, &#39;/product&#39;, &#39;/product/&#39;+ str(product_id), &#39;/product/&#39;+ str(product_id) +&#39;/price&#39; ] for end in endpoints: response = requests.get(&#39;https://api.trundler.dev/&#39;+end, headers=headers) j_response = json.loads(response.text) df = pd.DataFrame(pd.json_normalize(j_response)) print(&quot;--Endpoint--&quot;, end) print(&quot;Shape: &quot;,df.shape) print(&quot;Columns: &quot;,df.columns,&quot; n&quot;) . . The results can be summarized in the following tables: .   /retailer /retailer/{id} retailer/{id}/product . shape | (#num_retailers,4) | (1,4) | (#num_retailer_products,7) | . columns | id, retailer, url, currency | id, retailer, url, currency | url, product, model, sku, retailer_id, id, brand | . .   /product /product/{id} /product/{id}/price . shape | (#num_products,7) | (1,8) | (#num_prices,5) | . columns | url, product, model, sku, retailer_id, id, brand | url, product, barcodes, model, sku, retailer_id, id, brand | product_id, time, price, price_promotion, available | . . Conclusion of this section . It is a good occasion to get used to R and make use of the package already written in R :) .",
    "url": "http://localhost:4000/just-the-docs/docs/Getting_familiar/",
    "relUrl": "/docs/Getting_familiar/"
  }
  ,"2": {
    "title": "New Functionalities",
    "content": "New Functionalities . Many of the interesting conclusions that can be drawn from this dataset are associated with: . Product price variability over time. | Product availability over time. | Product offer prices variability over time. | For people who don’t have access to the entire database, some new functionalities for the detection of variability of those variables could be useful. Here I propose some of them. . Download Jupyter Notebook for this section . . . Price variability by product Example | | Price variability by retailer Example | | I’m feeling lucky Example | | Plot price vs time Example | | . Price variability by product . This function allows the user to know how many times the price (and availability and price promotion if apply) of a product changed in the sampling time period. . product_variability({product ID}) . product_variability &lt;- function(prod,price_var=1){ date_range &lt;- function(date1,date2){ date1= format(as.Date(date1, format = &quot;%Y-%m-%d&quot;), &quot;%b-%y&quot;) date2= format(as.Date(date2, format = &quot;%Y-%m-%d&quot;), &quot;%b-%y&quot;) drange &lt;- paste(date2,date1,sep=&quot;-&quot;) return(drange) } price_range &lt;- function(price_min,price_max){ prange &lt;- paste(price_min,price_max,sep=&quot;-&quot;) return(prange) } #Detect variability in col column variability &lt;- function(df, col,product){ df &lt;- subset(df, !is.na(df[[col]])) var=0 if (nrow(df)&gt;1){ row_value &lt;- df[1, col] for (row in 2:nrow(df)){ if(df[row, col]!= row_value) { row_value &lt;- df[row, col] var &lt;- var + 1 } } } return(var) } #Get prices for product ID p_prices&lt;-product_prices(prod) #Get how many times the price changes over the date range p_var &lt;- variability(p_prices,&quot;price&quot;,prod) #Get more information if the price change more or equal to price_var times if (p_var &gt;= price_var){ retailer_id &lt;- product(prod)$retailer_id product&lt;-product(prod)$product total_samples&lt;-nrow(p_prices) date_range &lt;- date_range(p_prices$&#39;time&#39;[1],p_prices$&#39;time&#39;[total_samples]) price_range &lt;- price_range(min(p_prices$&#39;price&#39;),max(p_prices$&#39;price&#39;)) #Check availability variability if (all(is.na(p_prices[[&#39;available&#39;]]))){ av_var &lt;- &quot;NA&quot; } else{ av_var &lt;- variability(p_prices,&quot;available&quot;,prod) } #Check promotions variability if (all(is.na(p_prices[[&#39;price_promotion&#39;]]))){ prom_var &lt;- &quot;NA&quot; } else{ prom_var &lt;- variability(p_prices,&quot;price_promotion&quot;,prod) } #Save the data and convert indo a dataframe output&lt;-list(retailer_id,prod,product,price_range,p_var,av_var,prom_var,total_samples,date_range) output&lt;-as.data.frame(output) names(output) &lt;- c(&#39;retailer_id&#39;,&#39;product_id&#39;,&#39;product&#39;,&#39;price_range&#39;,&#39;price_variability&#39;,&#39;avail_variability&#39;,&#39;prom_variability&#39;,&#39;total_samples&#39;, &#39;date_range&#39;) } else{ output &lt;- data.frame() } return(output) } . Example . product_variability(587936) . retailer_idproduct_idproductprice_rangeprice_variabilityavail_variabilityprom_variabilitytotal_samplesdate_range . 52 | 587936 | JVC LT-50N750A 50&quot;FHD SMART L.E.D TV | 4890-6999 | 8 | 0 | NA | 15 | Feb-20-May-20 | . Product 587936 changed price 8 times in the sampling period (Feb-20-May-20). With no variation in availability and no data about promotions. We can check this here: . product_prices(587936) . product_idtimepriceprice_promotionprice_effectiveavailable . 587936 | 2020-05-25 00:37:58 | 6999 | NA | 6999 | TRUE | . 587936 | 2020-05-18 00:36:11 | 4999 | NA | 4999 | TRUE | . 587936 | 2020-05-11 05:00:26 | 4999 | NA | 4999 | TRUE | . 587936 | 2020-05-04 00:36:21 | 5699 | NA | 5699 | TRUE | . 587936 | 2020-04-20 00:33:21 | 4999 | NA | 4999 | TRUE | . 587936 | 2020-04-13 00:26:10 | 4999 | NA | 4999 | TRUE | . 587936 | 2020-03-30 00:28:27 | 5499 | NA | 5499 | TRUE | . 587936 | 2020-03-23 00:27:19 | 5499 | NA | 5499 | TRUE | . 587936 | 2020-03-16 00:33:52 | 4890 | NA | 4890 | TRUE | . 587936 | 2020-03-09 00:26:23 | 4890 | NA | 4890 | TRUE | . 587936 | 2020-03-02 00:28:37 | 5499 | NA | 5499 | TRUE | . 587936 | 2020-02-24 00:26:43 | 4890 | NA | 4890 | TRUE | . 587936 | 2020-02-17 00:44:01 | 5499 | NA | 5499 | TRUE | . 587936 | 2020-02-10 00:43:40 | 5499 | NA | 5499 | TRUE | . 587936 | 2020-02-03 00:36:19 | 5499 | NA | 5499 | TRUE | . . Price variability by retailer . This function allows the user to know if the price of n_products products randomly selected for a certain retailer changed more or equal than price_var times in the sampling time period. . retailer_variability({retailer ID or list of retailers IDs}, {price_var}, {n_products}) . By default n_products=10 and price_var=1 . You can also see the changes (if exist) on availability or price promotion. . retailer_variability &lt;- function(ret_id, price_var=1, n_products=10) { output=data.frame() var_not_found =c() #For each retailer ID, get randomly #n_products products and detect variability for (ret in ret_id){ products &lt;- c(retailer_products(ret) [[&#39;product_id&#39;]]) prod_ids &lt;- c(sample(products, n_products, replace=FALSE)) for (prod in prod_ids){ getprod &lt;- (product_variability(prod,price_var)) if (nrow(getprod)&gt;0){ output &lt;- rbind(output,getprod) } } } #Print details if no variability found if (nrow(output)&gt;0){ var_not_found &lt;- ret_id[!(ret_id %in% output[[&#39;retailer_id&#39;]])] if (length(var_not_found)&gt;1){ cat(&quot;Nothing found for retailers: &quot;,var_not_found, sep=&quot; &quot;) } else if (length(var_not_found)==1) { cat(&quot;Nothing found for retailer: &quot;,var_not_found) } } else{ print(&quot;No variability found&quot;) } output } . . Example . retailer_variability(71) . retailer_idproduct_idproductprice_rangeprice_variabilityavail_variabilityprom_variabilitytotal_samplesdate_range . 71 | 1387108 | Canon EF-S 55-250 mm f4-5.6 IS STM Lens – Lenses – Foto Discount World | 6100-7000 | 4 | NA | 4 | 10 | Mar-20-May-20 | . 71 | 1385898 | Defy Cooker Hood 600 STD B (DCH290) | Delivery Charge Excluded | 1000-1100 | 2 | NA | 2 | 10 | Mar-20-May-20 | . 71 | 1387150 | Nikon 50mm f1.4G AF-S Lens – Lenses – Foto Discount World | 8600-10800 | 3 | NA | 4 | 10 | Mar-20-May-20 | . 71 | 1385866 | Meade Infinity 50mm Altazimuth Refractor + Free Delivery | 920-1095 | 1 | NA | NA | 10 | Mar-20-May-20 | . 71 | 1385491 | Canon Filter 82mm Protector + Free Delivery | 1600-1700 | 3 | NA | 4 | 10 | Mar-20-May-20 | . 71 | 1383973 | Fujifilm XF 35mm F1.4 R Lens – Lenses – Foto Discount World | 8900-11200 | 3 | NA | 4 | 10 | Mar-20-May-20 | . 71 | 1384171 | Sigma 16mm f/1.4 DC DN Contemporary Lens for Micro Four Thirds + Free Delivery | 7100-8000 | 3 | NA | 4 | 10 | Mar-20-May-20 | . You can also pass a list of retailers IDs: . retailer_variability(c(71,24,3,52)) . Nothing found for retailer: 3 . retailer_idproduct_idproductprice_rangeprice_variabilityavail_variabilityprom_variabilitytotal_samplesdate_range . 71 | 1386116 | Sigma 52mm WR UV filter + Free Delivery | 700-800 | 3 | NA | 3 | 10 | Mar-20-May-20 | . 71 | 1384327 | Canon Zoemini C – Instant Camera Printer ( Bumblebee Yellow ) – Cameras – Foto Discount World | 2000-2400 | 3 | NA | 4 | 10 | Mar-20-May-20 | . 71 | 1382284 | Nikon AF-S 70-200mm f4G ED VR Lens – Lenses – Foto Discount World | 0-30900 | 2 | NA | 1 | 10 | Mar-20-May-20 | . 71 | 1387643 | Canon EOS C300 Mk II ( CFast Card ) EF Mount Video Camera – Video Cameras – Foto Discount World | 139100-153400 | 4 | NA | 4 | 10 | Mar-20-May-20 | . 24 | 96497 | Arroll 4-Column Cast Iron Radiator 760 x 754mm Cream | 391.02-409.99 | 2 | NA | NA | 16 | Jan-20-May-20 | . 24 | 246308 | Blyss Undertile Heating Mat 1m² | 19.99-39.99 | 2 | NA | 0 | 16 | Jan-20-May-20 | . 52 | 588202 | AMPLIFY PRO FUSION BT H/P-AMP2011BKBL | 199.99-299.99 | 2 | NA | NA | 15 | Feb-20-May-20 | . 52 | 588168 | OVHD REPLACEMENT REMOTE CONTROL | 99.99-149.99 | 2 | NA | NA | 15 | Feb-20-May-20 | . 52 | 2268183 | HISENSE H12DESS S/STEEL 12PLC D/WASHE | 4299-4999 | 1 | NA | NA | 6 | Apr-20-May-20 | . 52 | 588005 | HISENSE WTX1302T 13KG TITANIUM T/L | 4199-4799 | 6 | NA | NA | 14 | Feb-20-May-20 | . 52 | 588914 | 3PCE HILTON WALL UNIT | 3900-4499 | 4 | NA | NA | 15 | Feb-20-May-20 | . 52 | 588460 | HP AMD ULTIMATE BUNDLE | 5690-5999 | 9 | NA | NA | 15 | Feb-20-May-20 | . 52 | 588001 | JVC XV-N430B HDMI DVD PLAYER | 450-699 | 6 | NA | NA | 15 | Feb-20-May-20 | . 52 | 588900 | ALPINE TV STAND | 1700-1999 | 8 | NA | NA | 15 | Feb-20-May-20 | . 52 | 588842 | 152CM DREAM THERAPY BASE SET | 3990-5999 | 7 | NA | NA | 15 | Feb-20-May-20 | . Note: If you get “Nothing found for retailer {retailer_ID}” it doesn’t mean that there is no product with price variation &gt;= price_var for this retailer. It means that it is no variation for the randomly selected n_products products for that retailer. . . I’m feeling lucky . This function allows the user to know if the price of n_products randomly selected products for n_retailers randomly selected retailers changed more or equal than price_var times in the sampling time period. . feeling_lucky_variability({n_retailers}, {price_var}, {n_products}) . By default n_retailers=5, n_products=10 and price_var=1 . You can also see the change (if exist) on availability or price promotion. . feeling_lucky_variability &lt;- function(n_retailers=5, price_var=1, n_products=10){ #For all the retailers ID, get randomly #n_retailers retailers retailers &lt;- retailer()[[&#39;retailer_id&#39;]] ret_id &lt;- c(sample(retailers, n_retailers, replace=FALSE)) #Check variability for all the randomly selected retailers retailer_variability(ret_id, price_var, n_products) } . . Example . feeling_lucky_variability() . Nothing found for retailers: 64 86 . retailer_idproduct_idproductprice_rangeprice_variabilityavail_variabilityprom_variabilitytotal_samplesdate_range . 63 | 900900 | Good Grips Pop 2 Rectangular Container - Wide Tall, 3.5L | 359-369 | 1 | 0 | NA | 69 | Feb-20-May-20 | . 63 | 905964 | Gourmet Chutney, 250ml | 49-52 | 1 | 0 | NA | 69 | Feb-20-May-20 | . 59 | 516135 | Yellow Roses in Designer Box - 12 roses | 520-676 | 4 | NA | NA | 14 | Jan-20-May-20 | . 59 | 1518697 | Personalised Polaroid Sweater - L | 520-540 | 1 | NA | NA | 9 | Mar-20-May-20 | . 59 | 484893 | Personalised Vintage Pink Fleece Gown Gift - Medium | 1300-1495 | 3 | NA | NA | 8 | Jan-20-May-20 | . 59 | 2697016 | HALLS FRUIT DRINK 1.25LT, MANGO&#39;ORANG - Standard | 43-44 | 1 | NA | NA | 3 | Apr-20-May-20 | . 59 | 496175 | Pink Party Combo Box - Standard | 390-405 | 1 | NA | NA | 14 | Jan-20-May-20 | . 59 | 685649 | Personalised Gentleman Backsberg Wine - Brut mcc | 520-598 | 2 | NA | NA | 12 | Feb-20-May-20 | . 59 | 636151 | Pastel Pink Floral Flair in Envelope Box - Purple | 611-769 | 4 | NA | NA | 12 | Feb-20-May-20 | . 59 | 1224465 | Personalised Pineapple Beach Towel - Standard | 390-405 | 1 | NA | NA | 11 | Mar-20-May-20 | . 59 | 476149 | Personalised Fierce Waterbottle And Racerback - Large | 520-598 | 3 | NA | NA | 13 | Jan-20-May-20 | . 59 | 670078 | Personalised Leaf Foilage Stone Towel Set - Set of 3 | 910-1079 | 2 | NA | NA | 11 | Feb-20-May-20 | . 95 | 2245608 | Nutriday Low Fat Guava Fruit Yoghurt 1kg | 29.99-32.49 | 1 | NA | NA | 41 | Apr-20-May-20 | . 95 | 2732671 | Denny Country Casserole Flavoured Cook-In-Sauce Pouch 415g | 26.99-34.99 | 1 | NA | NA | 21 | May-20-May-20 | . 95 | 2900189 | &lt;span style=white-space:pre-wrap&gt;Fresh Cut Berry &amp; Melon Fruit Salad Pack 600g &lt;/span&gt; | 54.99-59.99 | 1 | NA | NA | 7 | May-20-May-20 | . . Plot price vs time . This function allows the user to get an interactive visualization about the price (and price promotion if applies) vs time of a certain product. . plot_prod_variability({product_id}) . library(plotly) . plot_prod_variability&lt;- function(prod){ #Get data about the product p_prices &lt;- product_prices(prod) product &lt;- product(prod)$product retailer &lt;- product(prod)$retailer_id #Build an interactive plot trace_0 &lt;- p_prices[[&#39;price&#39;]] trace_1 &lt;- p_prices[[&#39;price_promotion&#39;]] fig &lt;- plot_ly(p_prices, x = p_prices[[&#39;time&#39;]]) fig &lt;- fig %&gt;% add_trace(y = ~trace_0, name = &#39;price&#39;,mode = &#39;lines&#39;) fig &lt;- fig %&gt;% add_trace(y = ~trace_1, name = &#39;price promotion&#39;, mode = &#39;lines&#39;) fig &lt;- fig %&gt;% layout(autosize = F, width = 600, height = 350, margin = list(l=50, r=50, b=100, t=150, pad=4), title = list(text = paste0(paste(&quot;Product: &quot;,product), &#39;&lt;br&gt;&#39;, &#39;&lt;br&gt;&#39;, &#39;&lt;sup&gt;&#39;, paste(&quot;Product ID: &quot;,toString(prod),&quot;, Retailer ID: &quot;,product(prod)$retailer_id), &#39;&lt;/sup&gt;&#39;)), xaxis = list(title=&quot;Date&quot;), yaxis = list(title=&quot;Price&quot;) ) return(fig) } . . Example . plot_prod_variability(1386116) . . .",
    "url": "http://localhost:4000/just-the-docs/docs/Newfunctionalities/",
    "relUrl": "/docs/Newfunctionalities/"
  }
  ,"3": {
    "title": "US vs NZ retail prices comparison during COVID-19",
    "content": "US vs NZ: retail prices comparison during COVID-19 . There is a retailer located both in the USA and in New Zealand. Since these are two countries with such a different evolution of the number of COVID-19 infected people [1], I want to evaluate if there is some variability in the price of the products sold by the retailer that are shared in both countries and if it has a correlation with the number of COVID-19 cases per day in each country. . Download Jupyter Notebook for this section . . library(trundler) library(dplyr) library(sqldf) . set_api_key({my_API_key}) . I found this retailer which operates in US and NZ: . retailer(105) retailer(109) . retailer_idretailerretailer_urlcurrency . 105 | CottonOn (NZ) | https://cottonon.com/NZ/ | NZD | . retailer_idretailerretailer_urlcurrency . 109 | CottonOn (US) | https://cottonon.com/US/ | USD | . I focus on the brand products that the retailer produces and then I get all that products in NZ and US . cot_on=products(brand=&quot;Cotton On&quot;) . nz_cot_on=filter(cot_on, cot_on$retailer_id==105) us_cot_on=filter(cot_on, cot_on$retailer_id==109) . . I combine both DataFrames getting all the shared products in both countries (same SKU). I certainly couldn’t use the sqldf package, but… I’m still getting used to R. . combined_nzus=sqldf(&quot; SELECT nz_cot_on.sku, nz_cot_on.product, nz_cot_on.product_id as nz_prod_id, us_cot_on.product_id as us_prod_id FROM nz_cot_on INNER JOIN us_cot_on ON nz_cot_on.sku = us_cot_on.sku &quot;) . . combined_nzus . skuproductnz_prod_idus_prod_id . 2010837-11 | The Original Graphic Tee | 2415630 | 2601194 | . 2010837-10 | The Original Graphic Tee | 2415633 | 2601195 | . 2010837-08 | The Original Graphic Tee | 2415641 | 2601197 | . 2010837-05 | The Original Graphic Tee | 2415666 | 2601198 | . 2010837-02 | The Original Graphic Tee | 2415671 | 2601200 | . 2010808-01 | Curve Straight Stretch High Rise Jean | 2415745 | 2601212 | . 2010767-03 | Curve The One Crew Tee | 2415903 | 2601226 | . 2010767-01 | Curve The One Crew Tee | 2415905 | 2601232 | . 2010768-02 | Curve The One Scoop Tee | 2415882 | 2601218 | . 2010768-01 | Curve The One Scoop Tee | 2415884 | 2601223 | . 2010721-09 | Sheer Vintage Scoop Long Sleeve Top | 2416010 | 2601244 | . 2010721-06 | Sheer Vintage Scoop Long Sleeve Top | 2416020 | 2601245 | . 2010721-02 | Sheer Vintage Scoop Long Sleeve Top | 2416025 | 2601246 | . 2010721-01 | Sheer Vintage Scoop Long Sleeve Top | 2416031 | 2601247 | . 2010569-05 | The Kyle Oversize Long Sleeve Tee | 2416152 | 2601273 | . 2010569-01 | The Kyle Oversize Long Sleeve Tee | 2416179 | 2601274 | . 2010754-01 | Curve 90S Baggy Denim Jacket | 2415933 | 2601233 | . 2010383-02 | Not Your Boyfriends Denim Trucker Jacket | 2416413 | 2601288 | . 2010383-01 | Not Your Boyfriends Denim Trucker Jacket | 2416423 | 2601289 | . 2010375-01 | Paperbag Pant | 2416463 | 2690286 | . 2010375-01 | Paperbag Pant | 2416463 | 2690286 | . 2010483-01 | Os Denim Jacket | 2416234 | 2601278 | . 2009940-04 | Curve Oversized Graphic License Tee | 2417544 | 2601399 | . 2009902-05 | Curve Graphic Fitted Tee | 2417603 | 2601401 | . 2009901-07 | Curve Oversized Graphic Tee | 2417607 | 2601402 | . 2009901-06 | Curve Oversized Graphic Tee | 2417624 | 2601403 | . 2009901-05 | Curve Oversized Graphic Tee | 2417632 | 2601406 | . 2009882-06 | Curve Oversized Graphic Tee | 2417735 | 2601410 | . 2009882-05 | Curve Oversized Graphic Tee | 2417746 | 2601417 | . 2009665-02 | Sheer Vintage Scoop Tee | 2417886 | 2601474 | . ... | ... | ... | ... | . 791735-33 | Baby Leggings | 2669646 | 2685477 | . 791735-24 | Baby Leggings | 2669650 | 2685478 | . 791735-24 | Baby Leggings | 2669650 | 2685478 | . 790341-88 | Hair Clips | 2669743 | 2584797 | . 790341-87 | Hair Clips | 2669745 | 2584800 | . 790341-85 | Hair Clips | 2669749 | 2584802 | . 790341-84 | Hair Clips | 2669752 | 2584806 | . 790341-83 | Hair Clips | 2669756 | 2584812 | . 790341-82 | Hair Clips | 2669759 | 2584815 | . 790341-81 | Hair Clips | 2669761 | 2584819 | . 790319-75 | Scarf Scrunchie | 2669781 | 2584836 | . 790319-70 | Scarf Scrunchie | 2669784 | 2584842 | . 790274-19 | Novelty Headband | 2669829 | 2584886 | . 790274-18 | Novelty Headband | 2669831 | 2584891 | . 790269-72 | Statement Bows | 2669836 | 2584903 | . 790269-09 | Statement Bows | 2669839 | 2584914 | . 790107-01 | Baby Opaque Tights | 2669863 | 2584962 | . 790101-14 | Kids Classic Trainers | 2669874 | 2685550 | . 790101-14 | Kids Classic Trainers | 2669874 | 2685550 | . 790298-28 | Fashion Headband | 2669805 | 2584854 | . 790284-49 | Mini Scrunchie | 2669810 | 2584858 | . 790284-43 | Mini Scrunchie | 2669812 | 2584869 | . 2008466-06 | The Baby Tee | 2731624 | 2741473 | . 2008466-04 | The Baby Tee | 2731626 | 2741474 | . 2008466-02 | The Baby Tee | 2731627 | 2741475 | . 2008466-01 | The Baby Tee | 2731628 | 2741476 | . 2008466-06 | The Baby Tee | 2731624 | 2741473 | . 2008466-04 | The Baby Tee | 2731626 | 2741474 | . 2008466-02 | The Baby Tee | 2731627 | 2741475 | . 2008466-01 | The Baby Tee | 2731628 | 2741476 | . When I determine how much prices samples we have for each of the shared products I find that I have, at best, only 6 price samples. What is more, the date ranges of the sampled prices do not cover the COVID-19 period (for example it goes from 2020-04-27 to 2020-05-25). . for (i in 1:nrow(combined_nzus)) { nz_timeprices = product_prices(as.numeric(combined_nzus$nz_prod_id[i])) us_timeprices = product_prices(as.numeric(combined_nzus$us_prod_id[i])) print(paste(nrow(nz_timeprices), nrow(us_timeprices))) } . . Conclusion of this section . Oops! Not enough data for this analysis. . . [1] endcoronavirus.org .",
    "url": "http://localhost:4000/just-the-docs/docs/USvsNz/",
    "relUrl": "/docs/USvsNz/"
  }
  ,"4": {
    "title": "Buttons",
    "content": "Buttons . . Basic button styles Links that look like buttons | Button element | | Using utilities with buttons Button size | Spacing between buttons | | . Basic button styles . Links that look like buttons . Link button . Link button Link button Link button . Link button . [Link button](http://example.com/){: .btn } [Link button](http://example.com/){: .btn .btn-purple } [Link button](http://example.com/){: .btn .btn-blue } [Link button](http://example.com/){: .btn .btn-green } [Link button](http://example.com/){: .btn .btn-outline } . Button element . GitHub Flavored Markdown does not support the button element, so you’ll have to use inline HTML for this: . Button element &lt;button type=&quot;button&quot; name=&quot;button&quot; class=&quot;btn&quot;&gt;Button element&lt;/button&gt; . . Using utilities with buttons . Button size . Wrap the button in a container that uses the font-size utility classes to scale buttons: . Big ass button . Tiny ass button . &lt;span class=&quot;fs-8&quot;&gt; [Link button](http://example.com/){: .btn } &lt;/span&gt; &lt;span class=&quot;fs-3&quot;&gt; [Tiny ass button](http://example.com/){: .btn } &lt;/span&gt; . Spacing between buttons . Use the margin utility classes to add spacing between two buttons in the same block. . Button with space Button . Button with more space Button . [Button with space](http://example.com/){: .btn .btn-purple .mr-2 } [Button ](http://example.com/){: .btn .btn-blue } [Button with more space](http://example.com/){: .btn .btn-green .mr-4 } [Button ](http://example.com/){: .btn .btn-blue } .",
    "url": "http://localhost:4000/just-the-docs/docs/ui-components/buttons/",
    "relUrl": "/docs/ui-components/buttons/"
  }
  ,"5": {
    "title": "Code",
    "content": "Code . . Inline code | Syntax highlighted code blocks | Code blocks with rendered examples | . Inline code . Code can be rendered inline by wrapping it in single back ticks. . Lorem ipsum dolor sit amet, &lt;inline code snippet&gt; adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. . Lorem ipsum dolor sit amet, `&lt;inline code snippet&gt;` adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. . . Syntax highlighted code blocks . Use Jekyll’s built-in syntax highlighting with Rouge for code blocks by using three backticks, followed by the language name: . // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require(&#39;./lang/&#39; + l) return true; } . js // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require(&#39;./lang/&#39; + l) return true; } . . Code blocks with rendered examples . To demonstrate front end code, sometimes it’s useful to show a rendered example of that code. After including the styles from your project that you’ll need to show the rendering, you can use a &lt;div&gt; with the code-example class, followed by the code block syntax. If you want to render your output with Markdown instead of HTML, use the markdown=&quot;1&quot; attribute to tell Jekyll that the code you are rendering will be in Markdown format… This is about to get meta… . Link button . [Link button](http://example.com/){: .btn } . &lt;div class=&quot;code-example&quot; markdown=&quot;1&quot;&gt; [Link button](http://example.com/){: .btn } &lt;/div&gt; markdown [Link button](http://example.com/){: .btn } .",
    "url": "http://localhost:4000/just-the-docs/docs/ui-components/code/",
    "relUrl": "/docs/ui-components/code/"
  }
  ,"6": {
    "title": "Color",
    "content": "Color Utilities . . Light Greys | Dark Greys | Purples | Blues | Greens | Yellows | Reds | . All the colors used in Just the Docs have been systematized into a series of variables that have been extended to both font color and background color utility classes. . Light Greys . Color value Font color utility Background color utility . grey-lt-000 | .text-grey-lt-000 | .bg-grey-lt-000 | . grey-lt-100 | .text-grey-lt-100 | .bg-grey-lt-100 | . grey-lt-200 | .text-grey-lt-200 | .bg-grey-lt-200 | . grey-lt-300 | .text-grey-lt-300 | .bg-grey-lt-300 | . Dark Greys . Color value Font color utility Background color utility . grey-dk-000 | .text-grey-dk-000 | .bg-grey-dk-000 | . grey-dk-100 | .text-grey-dk-100 | .bg-grey-dk-100 | . grey-dk-200 | .text-grey-dk-200 | .bg-grey-dk-200 | . grey-dk-250 | .text-grey-dk-250 | .bg-grey-dk-250 | . grey-dk-300 | .text-grey-dk-300 | .bg-grey-dk-300 | . Purples . Color value Font color utility Background color utility . purple-000 | .text-purple-000 | .bg-purple-000 | . purple-100 | .text-purple-100 | .bg-purple-100 | . purple-200 | .text-purple-200 | .bg-purple-200 | . purple-300 | .text-purple-300 | .bg-purple-300 | . Blues . Color value Font color utility Background color utility . blue-000 | .text-blue-000 | .bg-blue-000 | . blue-100 | .text-blue-100 | .bg-blue-100 | . blue-200 | .text-blue-200 | .bg-blue-200 | . blue-300 | .text-blue-300 | .bg-blue-300 | . Greens . Color value Font color utility Background color utility . green-000 | .text-green-000 | .bg-green-000 | . green-100 | .text-green-100 | .bg-green-100 | . green-200 | .text-green-200 | .bg-green-200 | . green-300 | .text-green-300 | .bg-green-300 | . Yellows . Color value Font color utility Background color utility . yellow-000 | .text-yellow-000 | .bg-yellow-000 | . yellow-100 | .text-yellow-100 | .bg-yellow-100 | . yellow-200 | .text-yellow-200 | .bg-yellow-200 | . yellow-300 | .text-yellow-300 | .bg-yellow-300 | . Reds . Color value Font color utility Background color utility . red-000 | .text-red-000 | .bg-red-000 | . red-100 | .text-red-100 | .bg-red-100 | . red-200 | .text-red-200 | .bg-red-200 | . red-300 | .text-red-300 | .bg-red-300 | .",
    "url": "http://localhost:4000/just-the-docs/docs/utilities/color/",
    "relUrl": "/docs/utilities/color/"
  }
  ,"7": {
    "title": "Configuration",
    "content": "Configuration . Just the Docs has some specific configuration parameters that can be defined in your Jekyll site’s _config.yml file. . . Site logo | Search | Aux links | Heading anchor links | Footer content | Color scheme | Google Analytics | . View this site’s _config.yml file as an example. . Site logo . # Set a path/url to a logo that will be displayed instead of the title logo: &quot;/assets/images/just-the-docs.png&quot; . Search . # Enable or disable the site search # Supports true (default) or false search_enabled: true # Enable support for hyphenated search words: search_tokenizer_separator: /[ s/]+/ . Aux links . # Aux links for the upper right navigation aux_links: &quot;Just the Docs on GitHub&quot;: - &quot;//github.com/pmarsceill/just-the-docs&quot; . Heading anchor links . # Heading anchor links appear on hover over h1-h6 tags in page content # allowing users to deep link to a particular heading on a page. # # Supports true (default) or false/nil heading_anchors: true . Footer content . # Footer content appears at the bottom of every page&#39;s main content footer_content: &quot;Copyright &amp;copy; 2017-2019 Patrick Marsceill. Distributed by an &lt;a href= &quot;https://github.com/pmarsceill/just-the-docs/tree/master/LICENSE.txt &quot;&gt;MIT license.&lt;/a&gt;&quot; . Color scheme . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . See Customization for more information. . Google Analytics . # Google Analytics Tracking (optional) # e.g, UA-1234567-89 ga_tracking: UA-5555555-55 .",
    "url": "http://localhost:4000/just-the-docs/docs/configuration/",
    "relUrl": "/docs/configuration/"
  }
  ,"8": {
    "title": "Customization",
    "content": "Customization . . Color schemes | Specific visual customization | Override styles | . Color schemes . New . Just the Docs supports two color schemes: light (default), and dark. . To enable a color scheme, set the color_scheme parameter in your site’s _config.yml file: . Example . # Color scheme currently only supports &quot;dark&quot; or nil (default) color_scheme: &quot;dark&quot; . Preview dark color scheme . Specific visual customization . To customize your site’s aesthetic, open _sass/custom/custom.scss in your editor to see if there is a variable that you can override. Most styles like fonts, colors, spacing, etc. are derived from these variables. To override a specific variable, uncomment its line and change its value. . For example, to change the link color from the purple default to blue, open _sass/custom/custom.css and find the $link-color variable on line 50. Uncomment it, and change its value to our $blue-000 variable, or another shade of your choosing. . Example . // ... // // $body-text-color: $grey-dk-100; // $body-heading-color: $grey-dk-300; $link-color: $blue-000; // // ... . Note: Editing the variables directly in _sass/support/variables.scss is not recommended and can cause other dependencies to fail. . Override styles . For styles that aren’t defined as a variables, you may want to modify specific CSS classes. To add your own CSS overrides at the end of the cascade, edit _sass/overrides.scss. This will allow for all overrides to be kept in a single file, and for any upstream changes to still be applied. . For example, if you’d like to add your own styles for printing a page, you could add the following styles. . Example . // Print-only styles. @media print { .side-bar, .page-header { display: none; } .main-content { max-width: auto; margin: 1em;} } .",
    "url": "http://localhost:4000/just-the-docs/docs/customization/",
    "relUrl": "/docs/customization/"
  }
  ,"9": {
    "title": "Markdown kitchen sink",
    "content": "Text can be bold, italic, or strikethrough. . Link to another page. . There should be whitespace between paragraphs. . There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project. . Header 1 . This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere. . Header 2 . This is a blockquote following a header. . When something is important enough, you do it even if the odds are not in your favor. . Header 3 . // Javascript code with syntax highlighting. var fun = function lang(l) { dateformat.i18n = require(&#39;./lang/&#39; + l) return true; } . # Ruby code with syntax highlighting GitHubPages::Dependencies.gems.each do |gem, version| s.add_dependency(gem, &quot;= #{version}&quot;) end . Header 4 . This is an unordered list following a header. | This is an unordered list following a header. | This is an unordered list following a header. | . Header 5 . This is an ordered list following a header. | This is an ordered list following a header. | This is an ordered list following a header. | Header 6 . head1 head two three . ok | good swedish fish | nice | . out of stock | good and plenty | nice | . ok | good oreos | hmm | . ok | good zoute drop | yumm | . There’s a horizontal rule below this. . . Here is an unordered list: . Item foo | Item bar | Item baz | Item zip | . And an ordered list: . Item one | Item two | Item three | Item four | And a nested list: . level 1 item level 2 item | level 2 item level 3 item | level 3 item | . | . | level 1 item level 2 item | level 2 item | level 2 item | . | level 1 item level 2 item | level 2 item | . | level 1 item | . Nesting an ol in ul in an ol . level 1 item (ul) level 2 item (ol) | level 2 item (ol) level 3 item (ul) | level 3 item (ul) | . | | level 1 item (ul) level 2 item (ol) | level 2 item (ol) level 3 item (ul) | level 3 item (ul) | . | level 4 item (ol) | level 4 item (ol) level 3 item (ul) | level 3 item (ul) | . | | level 1 item (ul) | . And a task list . Hello, this is a TODO item | Hello, this is another TODO item | Goodbye, this item is done | . Small image . . Large image . . Definition lists can be used with HTML syntax. . Name Godzilla Born 1952 Birthplace Japan Color Green Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long. This line should be long enough to demonstrate this. . The final element. .",
    "url": "http://localhost:4000/just-the-docs/docs/index-test/",
    "relUrl": "/docs/index-test/"
  }
  ,"10": {
    "title": "Exploring Trundler",
    "content": "Exploring Trundler . Trundler is a data product which gathers retail price data. . The Swagger documentation for the API is here and there is also an R package to make your life easier and free of JSONs. . The intent of this document is to become familiar with the API and to look through the data and trying to find something interesting. . . . Exploring Trundler Getting familiar with the API using Python | US vs NZ: retail prices comparison during COVID-19 | New functionalities | Variability detection | | . Getting familiar with the API using Python . Since I work mostly in Python, in this section I will explore the API using Python and the requests package. . Go to this section . US vs NZ: retail prices comparison during COVID-19 . There is a retailer located both in the USA and in New Zealand. Since these are two countries with such a different evolution of the number of COVID-19 infected people, I want to evaluate if there is some variability in the price of the products sold by the retailer that are shared in both countries, and if it has a correlation with the number of COVID-19 cases per day in each country. . Go to this section . New functionalities . Many of the interesting conclusions that can be drawn from this data set are associated with: . Product price variability over time. | Product availability over time. | Product offer prices variability over time. | For people who don’t have access to the entire database, some new functionalities for the detection of variability of those variables could be useful and are proposed in this section. . Go to this section . Variability detection . Using the new functionalities I will search for variabilities in the dataset to detect insights that Trundler may reveal. .",
    "url": "http://localhost:4000/just-the-docs/",
    "relUrl": "/"
  }
  ,"11": {
    "title": "Labels",
    "content": "Labels . Use labels as a way to add an additional mark to a section of your docs. Labels come in a few colors. By default, labels will be blue. . Default label . Blue label . Stable . New release . Coming soon . Deprecated . Default label {: .label } Blue label {: .label .label-blue } Stable {: .label .label-green } New release {: .label .label-purple } Coming soon {: .label .label-yellow } Deprecated {: .label .label-red } .",
    "url": "http://localhost:4000/just-the-docs/docs/ui-components/labels/",
    "relUrl": "/docs/ui-components/labels/"
  }
  ,"12": {
    "title": "Layout",
    "content": "Layout Utilities . . Spacing | Vertical Alignment | Display | . Spacing . These spacers are available to use for margins and padding with responsive utility classes. Combine these prefixes with a screen size and spacing scale to use them responsively. . Classname prefix What it does . .m- | margin | . .mx- | margin-left, margin-right | . .my- | margin top, margin bottom | . .mt- | margin-top | . .mr- | margin-right | . .mb- | margin-bottom | . .ml- | margin-left | . Classname prefix What it does . .p- | padding | . .px- | padding-left, padding-right | . .py- | padding top, padding bottom | . .pt- | padding-top | . .pr- | padding-right | . .pb- | padding-bottom | . .pl- | padding-left | . Spacing values are based on a 1rem = 16px spacing scale, broken down into these units: . Spacer/suffix Size in rems Rem converted to px . 1 | 0.25rem | 4px | . 2 | 0.5rem | 8px | . 3 | 0.75rem | 12px | . 4 | 1rem | 16px | . 5 | 1.5rem | 24px | . 6 | 2rem | 32px | . 7 | 2.5rem | 40px | . 8 | 3rem | 48px | . Examples . In Markdown, use the {: } wrapper to apply custom classes: . This paragraph will have a margin bottom of 1rem/16px at large screens. {: .mb-lg-4 } This paragraph will have 2rem/32px of padding on the right and left at all screen sizes. {: .px-6 } . Vertical Alignment . Classname What it does . .v-align-baseline | vertical-align: baseline | . .v-align-bottom | vertical-align: bottom | . .v-align-middle | vertical-align: middle | . .v-align-text-bottom | vertical-align: text-bottom | . .v-align-text-top | vertical-align: text-top | . .v-align-top | vertical-align: top | . Display . Display classes aid in adapting the layout of the elements on a page: . Class   . .d-block | display: block | . .d-flex | display: flex | . .d-inline | display: inline | . .d-inline-block | display: inline-block | . .d-none | display: none | . Use these classes in conjunction with the responsive modifiers. . Examples . In Markdown, use the {: } wrapper to apply custom classes: . This button will be hidden until medium screen sizes: [ A button ](#url) {: .d-none .d-md-inline-block } These headings will be `inline-block`: ### heading 3 {: .d-inline-block } ### heading 3 {: .d-inline-block } .",
    "url": "http://localhost:4000/just-the-docs/docs/utilities/layout/",
    "relUrl": "/docs/utilities/layout/"
  }
  ,"13": {
    "title": "Lists",
    "content": "Lists . . Unordered list | Ordered list | Task list | Definition list | . Most lists can be rendered with pure Markdown. . Unordered list . Item 1 | Item 2 | Item 3 | . or . Item 1 | Item 2 | Item 3 | . - Item 1 - Item 2 - Item 3 _or_ * Item 1 * Item 2 * Item 3 . Ordered list . Item 1 | Item 2 | Item 3 | 1. Item 1 1. Item 2 1. Item 3 . Task list . hello, this is a todo item | hello, this is another todo item | goodbye, this item is done | . - [ ] hello, this is a todo item - [ ] hello, this is another todo item - [x] goodbye, this item is done . Definition list . Definition lists require HTML syntax and aren’t supported with the GitHub Flavored Markdown compiler. . Name Godzilla Born 1952 Birthplace Japan Color Green &lt;dl&gt; &lt;dt&gt;Name&lt;/dt&gt; &lt;dd&gt;Godzilla&lt;/dd&gt; &lt;dt&gt;Born&lt;/dt&gt; &lt;dd&gt;1952&lt;/dd&gt; &lt;dt&gt;Birthplace&lt;/dt&gt; &lt;dd&gt;Japan&lt;/dd&gt; &lt;dt&gt;Color&lt;/dt&gt; &lt;dd&gt;Green&lt;/dd&gt; &lt;/dl&gt; .",
    "url": "http://localhost:4000/just-the-docs/docs/ui-components/lists/",
    "relUrl": "/docs/ui-components/lists/"
  }
  ,"14": {
    "title": "Navigation Structure",
    "content": "Navigation Structure . . Main navigation | Ordering pages | Excluding pages | Pages with children Child pages | Auto-generating Table of Contents | Children with children | | Auxiliary Navigation | In-page navigation with Table of Contents | . Main navigation . The main navigation for your Just the Docs site is on the left side of the page at large screens and on the top (behind a tap) on small screens. The main navigation can be structured to accommodate a multi-level menu system (pages with children and grandchildren). . By default, all pages will appear as top level pages in the main nav unless a parent page is defined (see Pages with Children). . . Ordering pages . To specify a page order, use the nav_order parameter in your pages’ YAML front matter. . Example . layout: default title: Customization nav_order: 4 . . Excluding pages . For specific pages that you do not wish to include in the main navigation, e.g. a 404 page or a landing page, use the nav_exclude: true parameter in the YAML front matter for that page. . Example . layout: default title: 404 nav_exclude: true . . Pages with children . Sometimes you will want to create a page with many children (a section). First, it is recommended that you keep pages that are related in a directory together… For example, in these docs, we keep all of the written documentation in the ./docs directory and each of the sections in subdirectories like ./docs/ui-components and ./docs/utilities. This gives us an organization like: . +-- .. |-- (Jekyll files) | |-- docs | |-- ui-components | | |-- index.md (parent page) | | |-- buttons.md | | |-- code.md | | |-- labels.md | | |-- tables.md | | +-- typography.md | | | |-- utilities | | |-- index.md (parent page) | | |-- color.md | | |-- layout.md | | |-- responsive-modifiers.md | | +-- typography.md | | | |-- (other md files, pages with no children) | +-- .. | |-- (Jekyll files) +-- .. . On the parent pages, add this YAML front matter parameter: . has_children: true (tells us that this is a parent page) | . Example . layout: default title: UI Components nav_order: 2 has_children: true . Here we’re setting up the UI Components landing page that is available at /docs/ui-components, which has children and is ordered second in the main nav. . Child pages . On child pages, simply set the parent: YAML front matter to whatever the parent’s page title is and set a nav order (this number is now scoped within the section). . Example . layout: default title: Buttons parent: UI Components nav_order: 2 . The Buttons page appears as a child of UI Components and appears second in the UI Components section. . Auto-generating Table of Contents . By default, all pages with children will automatically append a Table of Contents which lists the child pages after the parent page’s content. To disable this auto Table of Contents, set has_toc: false in the parent page’s YAML front matter. . Example . layout: default title: UI Components nav_order: 2 has_children: true has_toc: false . Children with children . Child pages can also have children (grandchildren). This is achieved by using a similar pattern on the child and grandchild pages. . Add the has_children attribute to the child | Add the parent and grand_parent attribute to the grandchild | Example . layout: default title: Buttons parent: UI Components nav_order: 2 has_children: true . layout: default title: Buttons Child Page parent: Buttons grand_parent: UI Components nav_order: 1 . This would create the following navigation structure: . +-- .. | |-- UI Components | |-- .. | | | |-- Buttons | | |-- Button Child Page | | | |-- .. | +-- .. . . Auxiliary Navigation . To add a auxiliary navigation item to your site (in the upper right on all pages), add it to the aux_nav configuration option in your site’s _config.yml file. . Example . # Aux links for the upper right navigation aux_links: &quot;Just the Docs on GitHub&quot;: - &quot;//github.com/pmarsceill/just-the-docs&quot; . . In-page navigation with Table of Contents . To generate a Table of Contents on your docs pages, you can use the {:toc} method from Kramdown, immediately after an &lt;ol&gt; in Markdown. This will automatically generate an ordered list of anchor links to various sections of the page based on headings and heading levels. There may be occasions where you’re using a heading and you don’t want it to show up in the TOC, so to skip a particular heading use the {: .no_toc } CSS class. . Example . # Navigation Structure {: .no_toc } ## {: .no_toc .text-delta } 1. TOC {:toc} . This example skips the page name heading (#) from the TOC, as well as the heading for the Table of Contents itself (##) because it is redundant, followed by the table of contents itself. .",
    "url": "http://localhost:4000/just-the-docs/docs/navigation-structure/",
    "relUrl": "/docs/navigation-structure/"
  }
  ,"15": {
    "title": "Responsive Modifiers",
    "content": "Responsive modifiers . Just the Docs spacing works in conjunction with a variety of modifiers that allow you to target specific screen sizes responsively. Use these in conjunction with spacing and display prefix and suffix classes. . Modifier Screen size . (none) | All screens until the next modifier | . xs | 320px (20rem) and up | . sm | 500px (31.25rem) and up | . md | 740px (46.25rem) and up | . lg | 1120px (70rem) and up | . xl | 1400px (87.5rem) and up | .",
    "url": "http://localhost:4000/just-the-docs/docs/utilities/responsive-modifiers/",
    "relUrl": "/docs/utilities/responsive-modifiers/"
  }
  ,"16": {
    "title": "Search",
    "content": "Search . . Set up search Generate search index | Enable search in configuration | | Hiding pages from search | . Just the Docs uses lunr.js to add a client-side search interface powered by a JSON index that Jekyll generates. All search results are shown in an auto-complete style interface (there is no search results page). By default, all generated HTML pages are indexed using the following data points: . Page title | Page content | Page URL | . Set up search . Generate search index . Before you can use search, you must initialize the feature by running this rake command that comes with just-the-docs: . $ bundle exec just-the-docs rake search:init . This command creates the search-data.json file that Jekyll uses to create your search index. Alternatively, you can create the file manually in the assets/js/ directory of your Jekyll site with this content: . {% raw %} { {% assign comma = false %} {% for page in site.html_pages %}{% if page.search_exclude != true %}{% if comma == true%},{% endif %}&quot;{{ forloop.index0 }}&quot;: { &quot;title&quot;: &quot;{{ page.title | replace: &#39;&amp;amp;&#39;, &#39;&amp;&#39; }}&quot;, &quot;content&quot;: &quot;{{ page.content | markdownify | replace: &#39;&lt;/h&#39;, &#39; . &lt;/h&#39; | replace: &#39;&lt;hr&#39;, &#39; . &lt;hr&#39; | replace: &#39;&lt;/p&#39;, &#39; . &lt;/p&#39; | replace: &#39;&lt;/ul&#39;, &#39; . &lt;/ul&#39; | replace: &#39;&lt;/tr&#39;, &#39; . &lt;/tr&#39; | replace: &#39;&lt;/li&#39;, &#39; | &lt;/li&#39; | replace: &#39;&lt;/td&#39;, &#39; | &lt;/td&#39; | strip_html | escape_once | remove: &#39;&#39; | remove: &#39;&#39; | remove: &#39;&#39; | replace: &#39; &#39;, &#39; &#39; | replace: &#39; . &#39;, &#39; . &#39; | replace: &#39; . &#39;, &#39; . &#39; | normalize_whitespace }}&quot;, &quot;url&quot;: &quot;{{ page.url | absolute_url }}&quot;, &quot;relUrl&quot;: &quot;{{ page.url }}&quot; }{% assign comma = true %} {% endif %}{% endfor %} }{% endraw %} . Note: If you don’t run this rake command or create this file manually, search will not work (or it will use the search index data from this docs site, not your site’s content). . Enable search in configuration . In your site’s _config.yml, enable search: . # Enable or disable the site search search_enabled: true . The default is for hyphens to separate tokens in search terms: gem-based is equivalent to gem based, matching either word. To allow search for hyphenated words: . # Set the search token separator search_tokenizer_separator: /[ s/]+/ . Hiding pages from search . Sometimes you might have a page that you don’t want to be indexed for the search nor to show up in search results, e.g, a 404 page. To exclude a page from search, add the search_exclude: true parameter to the page’s YAML front matter: . Example . layout: default title: Page not found nav_exclude: true search_exclude: true .",
    "url": "http://localhost:4000/just-the-docs/docs/search/",
    "relUrl": "/docs/search/"
  }
  ,"17": {
    "title": "Tables",
    "content": "Tables . Tables are responsive by default, allowing wide tables to have a horizontal scroll to access columns outside of the normal viewport. . head1 head two three . ok | good swedish fish | nice | . out of stock | good and plenty | nice | . ok | good oreos | hmm | . ok | good zoute drop | yumm | . | head1 | head two | three | |:-|:|:| | ok | good swedish fish | nice | | out of stock | good and plenty | nice | | ok | good `oreos` | hmm | | ok | good `zoute` drop | yumm | .",
    "url": "http://localhost:4000/just-the-docs/docs/ui-components/tables/",
    "relUrl": "/docs/ui-components/tables/"
  }
  ,"18": {
    "title": "Typography",
    "content": "Typography . . Font stack | Responsive type scale | Headings | Body text | Inline elements | Typographic Utilities | . Font stack . By default, Just the Docs uses a native system font stack for sans-serif fonts: . -apple-system, BlinkMacSystemFont, &quot;helvetica neue&quot;, helvetica, roboto, noto, &quot;segoe ui&quot;, arial, sans-serif . ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz . For monospace type, like code snippets or the &lt;pre&gt; element, Just the Docs uses a native system font stack for monospace fonts: . &quot;SFMono-Regular&quot;, Menlo, Consolas, Monospace . ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz . . Responsive type scale . Just the Docs uses a responsive type scale that shifts depending on the viewport size. . Selector Small screen size font-size Large screen size font-size . h1, .text-alpha | 32px | 36px | . h2, .text-beta | 18px | 24px | . h3, .text-gamma | 16px | 18px | . h4, .text-delta | 14px | 16px | . h5, .text-epsilon | 16px | 18px | . h6, .text-zeta | 18px | 24px | . body | 14px | 16px | . . Headings . Headings are rendered like this: . Heading 1 . Heading 2 . Heading 3 . Heading 4 . Heading 5 . Heading 6 . # Heading 1 ## Heading 2 ### Heading 3 #### Heading 4 ##### Heading 5 ###### Heading 6 . . Body text . Default body text is rendered like this: . Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. . Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. . . Inline elements . Text can be bold, italic, or strikethrough. . Link to another page. . Text can be **bold**, _italic_, or ~~strikethrough~~. [Link to another page](another-page). . . Typographic Utilities . There are a number of specific typographic CSS classes that allow you to override default styling for font size, font weight, line height, and capitalization. . View typography utilities .",
    "url": "http://localhost:4000/just-the-docs/docs/ui-components/typography/",
    "relUrl": "/docs/ui-components/typography/"
  }
  ,"19": {
    "title": "Typography",
    "content": "Typography Utilities . . Font size | Font weight | Line height | . Font size . Use the .fs-1 - .fs-10 to set an explicit font-size. . Class Small screen size font-size Large screen size font-size . .fs-1 | 9px | 10px | . .fs-2 | 11px | 12px | . .fs-3 | 12px | 14px | . .fs-4 | 14px | 16px | . .fs-5 | 16px | 18px | . .fs-6 | 18px | 24px | . .fs-7 | 24px | 32px | . .fs-8 | 32px | 38px | . .fs-9 | 38px | 42px | . .fs-10 | 42px | 48px | . Font size 1 . Font size 2 . Font size 3 . Font size 4 . Font size 5 . Font size 6 . Font size 7 . Font size 8 . Font size 9 . Font size 10 . In Markdown, use the `{: }` wrapper to apply custom classes: Font size 1 {: .fs-1 } Font size 2 {: .fs-2 } Font size 3 {: .fs-3 } Font size 4 {: .fs-4 } Font size 5 {: .fs-5 } Font size 6 {: .fs-6 } Font size 7 {: .fs-7 } Font size 8 {: .fs-8 } Font size 9 {: .fs-9 } Font size 10 {: .fs-10 } . Font weight . Use the .fw-300 - .fw-700 to set an explicit font-size. . Font weight 300 . Font weight 400 . Font weight 500 . Font weight 700 . In Markdown, use the `{: }` wrapper to apply custom classes: Font weight 300 {: .fw-300 } Font weight 400 {: .fw-400 } Font weight 500 {: .fw-500 } Font weight 700 {: .fw-700 } . Line height . Use the lh- classes to explicitly apply line height to text. . Class line-height value Notes . .lh-0 | 0 |   | . .lh-tight | 1.1 | Default for headings | . .lh-default | 1.4 | Default for body (paragraphs) | . No Line height No Line height . Tight line height Tight line height . Default line height Default line height . In Markdown, use the `{: }` wrapper to apply custom classes: No Line height No Line height {: .lh-0 } Tight line height Tight line height {: .lh-tight } Default line height Default line height {: .fh-default } .",
    "url": "http://localhost:4000/just-the-docs/docs/utilities/typography/",
    "relUrl": "/docs/utilities/typography/"
  }
  ,"20": {
    "title": "UI Components",
    "content": "UI Components . To make it as easy as possible to write documentation in plain Markdown, most UI components are styled using default Markdown elements with few additional CSS classes needed. .",
    "url": "http://localhost:4000/just-the-docs/docs/ui-components",
    "relUrl": "/docs/ui-components"
  }
  ,"21": {
    "title": "Utilities",
    "content": "Utilities . CSS utility classes come in handy when you to want to override default styles to create additional whitespace (margins/padding), correct unexpected shifts in font size or weight, add color, or hide (or show) something at a specific screen size. .",
    "url": "http://localhost:4000/just-the-docs/docs/utilities",
    "relUrl": "/docs/utilities"
  }
  
}